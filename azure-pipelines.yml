trigger:
  branches:
    include:
    - master
    - feature/ci-dev
  paths:
    exclude:
    - README.md
    - LICENSE
    - .travis.yml
    - book.toml
    - docker/*
    - manual/*
    - docs/*

jobs:
- job: Linux
  timeoutInMinutes: 120
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      arch:
        containerImage: immunant/c2rust:archlinux-base-latest
      debian10:
        containerImage: immunant/c2rust:debian-buster-latest
      debian11:
        containerImage: immunant/c2rust:debian-bullseye-latest
      fedora34:
        containerImage: immunant/c2rust:fedora-34-latest
      ubuntu20:
        containerImage: immunant/c2rust:ubuntu-focal-latest
      ubuntu18:
        containerImage: immunant/c2rust:ubuntu-bionic-latest
  container: $[ variables['containerImage'] ]
  steps:

  # rust was installed for the `docker` user, not the user azure creates
  # but cargo and rustup can be controlled via $CARGO_HOME and $RUSTUP_HOME.
  # NOTE: $HOME is not set correctly for the azure user; don't rely on it.

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      export RUSTFLAGS="-D warnings"
      export RUSTDOCFLAGS="-D warnings"
      cargo fmt --check
    displayName: 'cargo fmt --check'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      export RUSTFLAGS="-D warnings"
      export RUSTDOCFLAGS="-D warnings"
      # Don't build with `--all-features` as `--all-features` includes `--features llvm-static`,
      # which we don't want to test here (it doesn't work out of the box on Arch and Fedora;
      # see https://github.com/immunant/c2rust/issues/500).
      cargo build --release
    displayName: 'cargo build against host clang/LLVM (fast build)'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      export RUSTFLAGS="-D warnings"
      export RUSTDOCFLAGS="-D warnings"
      cargo test --release --workspace
    displayName: 'cargo test'

  - script: |
      export PATH="/home/docker/.cargo/bin:$PATH"
      export RUSTUP_HOME=/home/docker/.rustup
      export CARGO_HOME=$AGENT_TEMPDIRECTORY/.cargo
      # `test_translator.py` compiles translated code,
      # which has tons of warnings.
      # `RUSTFLAGS="-D warnings"` would be inherited by that,
      # causing tons of errors, so don't set that.
      # `test_translator.py` does not rebuild,
      # so changing `RUSTFLAGS` will not trigger a full rebuild.
      ./scripts/test_translator.py tests/
    displayName: 'Test translator (fast build)'

- job: Darwin
  timeoutInMinutes: 180
  pool:
    vmImage: 'macOS-latest'
  steps:
  - script: |
      ./scripts/provision_mac.sh
      # speeds up provisioning
      export HOMEBREW_NO_AUTO_UPDATE=1
      # prepare environment for the following steps
      source $HOME/.cargo/env
      # print some useful info to help troubleshoot
      brew info llvm@17
      which python3
      /usr/bin/env python3 -c "import sys; print(sys.path)"
    displayName: 'Provision macOS'

  - script: |
      export LLVM_CONFIG_PATH=$(brew --prefix llvm@17)/bin/llvm-config
      export RUSTFLAGS="-D warnings"
      export RUSTDOCFLAGS="-D warnings"
      # Don't build with `--all-features` (see analogous step for Linux).
      cargo build --release
    displayName: 'cargo build against host clang/LLVM (fast build)'

  - script: |
      $(brew --prefix llvm@17)/bin/llvm-config
      export RUSTFLAGS="-D warnings"
      export RUSTDOCFLAGS="-D warnings"
      cargo test --release --workspace
    displayName: 'cargo test'

  - script: |
      # `RUSTFLAGS` not set (see analogous step for Linux).
      ./scripts/test_translator.py tests/
    displayName: 'Test translator (fast build)'
